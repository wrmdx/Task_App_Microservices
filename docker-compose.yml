version: '3.8'

services:
  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8002:80"
    environment:
      - APP_NAME=AuthService
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://auth-service
      - DB_CONNECTION=mysql
      - DB_HOST=auth-db
      - DB_PORT=3306
      - DB_DATABASE=auth_db
      - DB_USERNAME=root
      - DB_PASSWORD=password
    volumes:
      - ./auth-service/storage:/var/www/html/storage
      - ./auth-service/bootstrap/cache:/var/www/html/bootstrap/cache
    depends_on:
      - auth-db
    restart: unless-stopped
    networks:
      - microservices-network

  # Auth Service Database
  auth-db:
    image: mysql:8.0
    container_name: auth-db
    environment:
      - MYSQL_DATABASE=auth_db
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_ROOT_HOST=%
    volumes:
      - auth-db-data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - microservices-network

  # Project Service
  project-service:
    build:
      context: ./project-service
      dockerfile: Dockerfile
    container_name: project-service
    ports:
      - "8000:80"
    environment:
      - APP_NAME=ProjectService
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://project-service
      - DB_CONNECTION=mysql
      - DB_HOST=project-db
      - DB_PORT=3306
      - DB_DATABASE=project_db
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - AUTH_SERVICE_URL=http://auth-service
    volumes:
      - ./project-service/storage:/var/www/html/storage
      - ./project-service/bootstrap/cache:/var/www/html/bootstrap/cache
    depends_on:
      - project-db
      - auth-service
    restart: unless-stopped
    networks:
      - microservices-network

  # Project Service Database
  project-db:
    image: mysql:8.0
    container_name: project-db
    environment:
      - MYSQL_DATABASE=project_db
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_ROOT_HOST=%
    volumes:
      - project-db-data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - microservices-network

  # Task Service
  task-service:
    build:
      context: ./task-service
      dockerfile: Dockerfile
    container_name: task-service
    ports:
      - "8001:80"
    environment:
      - APP_NAME=TaskService
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://task-service
      - DB_CONNECTION=mysql
      - DB_HOST=task-db
      - DB_PORT=3306
      - DB_DATABASE=task_db
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - AUTH_SERVICE_URL=http://auth-service
      - PROJECT_SERVICE_URL=http://project-service
    volumes:
      - ./task-service/storage:/var/www/html/storage
      - ./task-service/bootstrap/cache:/var/www/html/bootstrap/cache
    depends_on:
      - task-db
      - auth-service
      - project-service
    restart: unless-stopped
    networks:
      - microservices-network

  # Task Service Database
  task-db:
    image: mysql:8.0
    container_name: task-db
    environment:
      - MYSQL_DATABASE=task_db
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_ROOT_HOST=%
    volumes:
      - task-db-data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - microservices-network

volumes:
  auth-db-data:
    driver: local
  project-db-data:
    driver: local
  task-db-data:
    driver: local

networks:
  microservices-network:
    driver: bridge